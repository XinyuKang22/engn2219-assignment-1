<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>1</version>
  <attributes>
    <entry>
      <string>backgroundColor</string>
      <awt-color>
        <red>255</red>
        <green>255</green>
        <blue>255</blue>
        <alpha>255</alpha>
      </awt-color>
    </entry>
    <entry>
      <string>Width</string>
      <int>6</int>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>INST</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="-300" y="40"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>DMUX</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="1440" y="1100"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>ALUOP</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="1440" y="780"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RS1</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="1440" y="200"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RS2</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="1440" y="300"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>WS</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="1440" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>WE</string>
        </entry>
      </elementAttributes>
      <pos x="1440" y="680"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>EXEC</string>
        </entry>
      </elementAttributes>
      <pos x="1440" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>splitterSpreading</string>
          <int>4</int>
        </entry>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>11-11,10-8,6-4,2-0,15-12</string>
        </entry>
      </elementAttributes>
      <pos x="-260" y="40"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>opcode</string>
        </entry>
      </elementAttributes>
      <pos x="-220" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>z</string>
        </entry>
      </elementAttributes>
      <pos x="-200" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>splitterSpreading</string>
          <int>4</int>
        </entry>
        <entry>
          <string>Input Splitting</string>
          <string>4</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>1,1,1,1</string>
        </entry>
      </elementAttributes>
      <pos x="-180" y="360"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>All Tests</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    WE  ALUOP  RS1   RS2  WS  STR  LDR DMUX

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 1  (i)     (ra)  (rb) (rd)  0   X    0  #test add/sub/and/orr
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1  X       (ra)  x    (rd)  0   1    1  #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0  X       (ra)  (rd)  X    1   X    X  #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          1  X       X      X   (rd)  0   X    2  #test movl

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="860" y="-120"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>SETH</string>
        </entry>
      </elementAttributes>
      <pos x="1440" y="1000"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>ALUOP</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    ALUOP 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) (i)    #test add/sub/and/orr
end loop

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="1560" y="760"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RS1</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    RS1  

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) (ra)  #test add/sub/and/orr
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        (ra)  #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        (ra)  #test str

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="1560" y="180"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RS2</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    RS2  

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) (rb) #test add/sub/and/orr
end loop
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        (rd) #test str

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="1560" y="280"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>STR</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>Z	INST                                    STR 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;
let sethop = 0b0001;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	(0)((aluop+i)&lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
	(1)((aluop+i)&lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
        (0)((aluop+i)&lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
        (1)((aluop+i)&lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
end loop

	(0)(ldrop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(1)(ldrop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(0)(ldrop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(1)(ldrop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(0)(strop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1    #test str
	(1)(strop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1    #test str
	(0)(strop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	(1)(strop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1    #test str
	let imm = random(256);
	(0)(movlop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(1)(movlop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(0)(movlop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(1)(movlop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(0)(sethop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
	(1)(sethop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
	(0)(sethop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
	(1)(sethop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="1560" y="560"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>WE</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>Z	INST                                    WE 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;
let sethop = 0b0001;
let ldiop = 0b0010;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	(0)((aluop+i)&lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 1    #test add/sub/and/orr
	(1)((aluop+i)&lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 1    #test add/sub/and/orr
        (0)((aluop+i)&lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
        (1)((aluop+i)&lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 1    #test add/sub/and/orr
end loop

	(0)(ldrop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1    #test ldr
	(1)(ldrop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1    #test ldr
	(0)(ldrop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(1)(ldrop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1    #test ldr
	(0)(strop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	(1)(strop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	(0)(strop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	(1)(strop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	let imm = random(256);
	(0)(movlop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test movl
	(1)(movlop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test movl
	(0)(movlop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(1)(movlop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test movl
	(0)(sethop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test seth
	(1)(sethop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test seth
	(0)(sethop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
	(1)(sethop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test seth
	(0)(ldiop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test ldi
	(1)(ldiop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test ldi
	(0)(ldiop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test ldi
	(1)(ldiop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test ldi
end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="1560" y="660"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>LDR</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>Z	INST                                    LDR 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;
let sethop = 0b0001;
let ldiop = 0b0010;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	(0)((aluop+i)&lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
	(1)((aluop+i)&lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
        (0)((aluop+i)&lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
        (1)((aluop+i)&lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
end loop

	(0)(ldrop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1    #test ldr
	(1)(ldrop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1    #test ldr
	(0)(ldrop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(1)(ldrop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1    #test ldr
	(0)(strop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	(1)(strop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	(0)(strop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	(1)(strop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	let imm = random(256);
	(0)(movlop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(1)(movlop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(0)(movlop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(1)(movlop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(0)(sethop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
	(1)(sethop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
	(0)(sethop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
	(1)(sethop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
	(0)(ldiop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test ldi
	(1)(ldiop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test ldi
	(0)(ldiop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test ldi
	(1)(ldiop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test ldi
end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="1560" y="420"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>DMUX</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    DMUX

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;
let sethop = 0b0001;
let ldiop = 0b0010;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0  #test add/sub/and/orr
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1  #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        3  #test str

	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          2  #test movl
	(sethop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          3  #test seth
	(ldiop    &lt;&lt;12 | rd&lt;&lt;8 | imm )          1  #test ldi
end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="1560" y="1080"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>WS</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    WS 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;
let sethop = 0b0001;
let ldiop = 0b0010;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) (rd)  #test add/sub/and/orr
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        (rd)   #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        X     #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          (rd)  #test movl
	(sethop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          (rd)  #test seth
	(ldiop    &lt;&lt;12 | rd&lt;&lt;8 | imm )          (rd)  #test ldi
end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="1560" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>1,1</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>2</string>
        </entry>
      </elementAttributes>
      <pos x="720" y="780"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="220" y="660"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="300" y="660"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Inputs</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="560" y="500"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="480" y="540"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="480" y="500"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="700" y="420"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="700" y="580"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="600" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>Rb</string>
        </entry>
      </elementAttributes>
      <pos x="-200" y="260"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>Ra</string>
        </entry>
      </elementAttributes>
      <pos x="-200" y="180"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>Rd</string>
        </entry>
      </elementAttributes>
      <pos x="-200" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="860" y="700"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="800" y="280"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>1,1</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>2</string>
        </entry>
      </elementAttributes>
      <pos x="560" y="1100"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Selector Bits</string>
          <int>4</int>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>flipSelPos</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="140" y="1220"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="140" y="1240"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="160" y="1240"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="180" y="1240"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="200" y="1240"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="220" y="1240"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="260" y="1240"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="280" y="1240"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="440" y="1240"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="420" y="1240"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="400" y="1240"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="380" y="1240"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="240" y="1240"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="300" y="1240"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="320" y="1240"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="340" y="1240"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="360" y="1240"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Selector Bits</string>
          <int>4</int>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>flipSelPos</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="140" y="1120"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="140" y="1140"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="160" y="1140"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="180" y="1140"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="200" y="1140"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="220" y="1140"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="260" y="1140"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="280" y="1140"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="440" y="1140"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="420" y="1140"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="400" y="1140"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="380" y="1140"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="240" y="1140"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="300" y="1140"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="320" y="1140"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="340" y="1140"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="360" y="1140"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="700" y="880"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>FLEN</string>
        </entry>
      </elementAttributes>
      <pos x="1440" y="880"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>FLEN</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>Z	INST                                    FLEN 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;
let sethop = 0b0001;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	(0)((aluop+i)&lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 1    #test add/sub/and/orr
	(1)((aluop+i)&lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 1    #test add/sub/and/orr
        (0)((aluop+i)&lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
        (1)((aluop+i)&lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 1    #test add/sub/and/orr
end loop

	(0)(ldrop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(1)(ldrop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(0)(ldrop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(1)(ldrop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(0)(strop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	(1)(strop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	(0)(strop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	(1)(strop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	let imm = random(256);
	(0)(movlop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(1)(movlop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(0)(movlop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(1)(movlop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(0)(sethop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
	(1)(sethop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
	(0)(sethop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
	(1)(sethop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="1560" y="860"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="640" y="880"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>STR</string>
        </entry>
      </elementAttributes>
      <pos x="1440" y="580"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>EXEC</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	Z    INST    EXEC
loop(i, 100)
    let x = random(1&lt;&lt;4);
    let y = random(1&lt;&lt;11);
    (1) (x&lt;&lt;12 | 0&lt;&lt;11 | y) (1)
    (0) (x&lt;&lt;12 | 0&lt;&lt;11 | y) (1)
    (1) (x&lt;&lt;12 | 1&lt;&lt;11 | y) (1)
    (0) (x&lt;&lt;12 | 1&lt;&lt;11 | y) (0)
end loop</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="1560" y="-20"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Z</string>
        </entry>
      </elementAttributes>
      <pos x="-300" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="340" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="420" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="1300" y="420"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="1300" y="560"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="1300" y="660"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="1300" y="860"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="680" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
      </elementAttributes>
      <pos x="-80" y="800"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
      </elementAttributes>
      <pos x="-40" y="800"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
      </elementAttributes>
      <pos x="0" y="800"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Inputs</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="20" y="880"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>LDR</string>
        </entry>
      </elementAttributes>
      <pos x="1440" y="440"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>SETH</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>Z	INST                                    SETH 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;
let sethop = 0b0001;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	(0)((aluop+i)&lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
	(1)((aluop+i)&lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
        (0)((aluop+i)&lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
        (1)((aluop+i)&lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
end loop

	(0)(ldrop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(1)(ldrop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(0)(ldrop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(1)(ldrop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(0)(strop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	(1)(strop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	(0)(strop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	(1)(strop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	let imm = random(256);
	(0)(movlop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(1)(movlop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(0)(movlop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(1)(movlop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(0)(sethop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test seth
	(1)(sethop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test seth
	(0)(sethop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
	(1)(sethop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test seth
end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="1560" y="960"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="1300" y="980"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>NetName</string>
          <string>IN12</string>
        </entry>
      </elementAttributes>
      <pos x="-140" y="360"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>NetName</string>
          <string>IN13</string>
        </entry>
      </elementAttributes>
      <pos x="-140" y="440"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>NetName</string>
          <string>IN14</string>
        </entry>
      </elementAttributes>
      <pos x="-140" y="520"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>NetName</string>
          <string>IN15</string>
        </entry>
      </elementAttributes>
      <pos x="-140" y="600"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN15</string>
        </entry>
      </elementAttributes>
      <pos x="-80" y="760"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN15</string>
        </entry>
      </elementAttributes>
      <pos x="180" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN15</string>
        </entry>
      </elementAttributes>
      <pos x="260" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN15</string>
        </entry>
      </elementAttributes>
      <pos x="620" y="920"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN15</string>
        </entry>
      </elementAttributes>
      <pos x="440" y="540"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN14</string>
        </entry>
      </elementAttributes>
      <pos x="-40" y="760"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN14</string>
        </entry>
      </elementAttributes>
      <pos x="620" y="880"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN14</string>
        </entry>
      </elementAttributes>
      <pos x="440" y="520"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN13</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="760"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN13</string>
        </entry>
      </elementAttributes>
      <pos x="220" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN13</string>
        </entry>
      </elementAttributes>
      <pos x="440" y="500"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN12</string>
        </entry>
      </elementAttributes>
      <pos x="40" y="760"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN12</string>
        </entry>
      </elementAttributes>
      <pos x="300" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN12</string>
        </entry>
      </elementAttributes>
      <pos x="580" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN12</string>
        </entry>
      </elementAttributes>
      <pos x="580" y="420"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="620" y="1280"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="620" y="1260"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Inputs</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="700" y="1200"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN15</string>
        </entry>
      </elementAttributes>
      <pos x="580" y="1280"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN14</string>
        </entry>
      </elementAttributes>
      <pos x="580" y="1260"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN13</string>
        </entry>
      </elementAttributes>
      <pos x="580" y="1220"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>IN12</string>
        </entry>
      </elementAttributes>
      <pos x="580" y="1200"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="620" y="1200"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>LDI</string>
        </entry>
      </elementAttributes>
      <pos x="1440" y="1220"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>LDI</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>Z	INST                                    LDI 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;
let sethop = 0b0001;
let ldiop = 0b0010;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	(0)((aluop+i)&lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
	(1)((aluop+i)&lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
        (0)((aluop+i)&lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
        (1)((aluop+i)&lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0    #test add/sub/and/orr
end loop

	(0)(ldrop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(1)(ldrop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(0)(ldrop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(1)(ldrop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test ldr
	(0)(strop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	(1)(strop    &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	(0)(strop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	(1)(strop    &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0    #test str
	let imm = random(256);
	(0)(movlop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(1)(movlop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(0)(movlop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(1)(movlop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test movl
	(0)(sethop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
	(1)(sethop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
	(0)(sethop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
	(1)(sethop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test seth
	(0)(ldiop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test ldi
	(1)(ldiop   &lt;&lt;12 | 0&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test ldi
	(0)(ldiop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          0    #test ldi
	(1)(ldiop   &lt;&lt;12 | 1&lt;&lt;11 | rd&lt;&lt;8 | imm )          1    #test ldi
end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="1560" y="1200"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="1300" y="1200"/>
    </visualElement>
    <visualElement>
      <elementName>Or</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="1040" y="440"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="-300" y="0"/>
      <p2 x="340" y="0"/>
    </wire>
    <wire>
      <p1 x="380" y="0"/>
      <p2 x="420" y="0"/>
    </wire>
    <wire>
      <p1 x="660" y="320"/>
      <p2 x="800" y="320"/>
    </wire>
    <wire>
      <p1 x="580" y="1280"/>
      <p2 x="620" y="1280"/>
    </wire>
    <wire>
      <p1 x="660" y="1280"/>
      <p2 x="700" y="1280"/>
    </wire>
    <wire>
      <p1 x="780" y="900"/>
      <p2 x="1300" y="900"/>
    </wire>
    <wire>
      <p1 x="680" y="580"/>
      <p2 x="700" y="580"/>
    </wire>
    <wire>
      <p1 x="1380" y="580"/>
      <p2 x="1440" y="580"/>
    </wire>
    <wire>
      <p1 x="580" y="1220"/>
      <p2 x="700" y="1220"/>
    </wire>
    <wire>
      <p1 x="1380" y="1220"/>
      <p2 x="1440" y="1220"/>
    </wire>
    <wire>
      <p1 x="640" y="520"/>
      <p2 x="680" y="520"/>
    </wire>
    <wire>
      <p1 x="-160" y="520"/>
      <p2 x="-140" y="520"/>
    </wire>
    <wire>
      <p1 x="440" y="520"/>
      <p2 x="560" y="520"/>
    </wire>
    <wire>
      <p1 x="-240" y="200"/>
      <p2 x="1440" y="200"/>
    </wire>
    <wire>
      <p1 x="300" y="1160"/>
      <p2 x="520" y="1160"/>
    </wire>
    <wire>
      <p1 x="740" y="780"/>
      <p2 x="1440" y="780"/>
    </wire>
    <wire>
      <p1 x="280" y="780"/>
      <p2 x="720" y="780"/>
    </wire>
    <wire>
      <p1 x="680" y="460"/>
      <p2 x="700" y="460"/>
    </wire>
    <wire>
      <p1 x="1120" y="460"/>
      <p2 x="1300" y="460"/>
    </wire>
    <wire>
      <p1 x="-220" y="1100"/>
      <p2 x="140" y="1100"/>
    </wire>
    <wire>
      <p1 x="580" y="1100"/>
      <p2 x="1440" y="1100"/>
    </wire>
    <wire>
      <p1 x="520" y="1100"/>
      <p2 x="560" y="1100"/>
    </wire>
    <wire>
      <p1 x="1220" y="660"/>
      <p2 x="1300" y="660"/>
    </wire>
    <wire>
      <p1 x="500" y="20"/>
      <p2 x="680" y="20"/>
    </wire>
    <wire>
      <p1 x="720" y="20"/>
      <p2 x="1220" y="20"/>
    </wire>
    <wire>
      <p1 x="1220" y="20"/>
      <p2 x="1440" y="20"/>
    </wire>
    <wire>
      <p1 x="1220" y="980"/>
      <p2 x="1300" y="980"/>
    </wire>
    <wire>
      <p1 x="-240" y="280"/>
      <p2 x="800" y="280"/>
    </wire>
    <wire>
      <p1 x="780" y="600"/>
      <p2 x="820" y="600"/>
    </wire>
    <wire>
      <p1 x="-160" y="600"/>
      <p2 x="-140" y="600"/>
    </wire>
    <wire>
      <p1 x="820" y="600"/>
      <p2 x="1300" y="600"/>
    </wire>
    <wire>
      <p1 x="620" y="920"/>
      <p2 x="700" y="920"/>
    </wire>
    <wire>
      <p1 x="780" y="1240"/>
      <p2 x="1000" y="1240"/>
    </wire>
    <wire>
      <p1 x="1000" y="1240"/>
      <p2 x="1300" y="1240"/>
    </wire>
    <wire>
      <p1 x="520" y="540"/>
      <p2 x="560" y="540"/>
    </wire>
    <wire>
      <p1 x="440" y="540"/>
      <p2 x="480" y="540"/>
    </wire>
    <wire>
      <p1 x="1220" y="860"/>
      <p2 x="1300" y="860"/>
    </wire>
    <wire>
      <p1 x="520" y="1120"/>
      <p2 x="560" y="1120"/>
    </wire>
    <wire>
      <p1 x="200" y="800"/>
      <p2 x="720" y="800"/>
    </wire>
    <wire>
      <p1 x="1000" y="480"/>
      <p2 x="1040" y="480"/>
    </wire>
    <wire>
      <p1 x="300" y="1060"/>
      <p2 x="520" y="1060"/>
    </wire>
    <wire>
      <p1 x="580" y="420"/>
      <p2 x="700" y="420"/>
    </wire>
    <wire>
      <p1 x="1220" y="420"/>
      <p2 x="1300" y="420"/>
    </wire>
    <wire>
      <p1 x="-300" y="40"/>
      <p2 x="-260" y="40"/>
    </wire>
    <wire>
      <p1 x="-240" y="40"/>
      <p2 x="420" y="40"/>
    </wire>
    <wire>
      <p1 x="1380" y="680"/>
      <p2 x="1440" y="680"/>
    </wire>
    <wire>
      <p1 x="-240" y="360"/>
      <p2 x="-220" y="360"/>
    </wire>
    <wire>
      <p1 x="-160" y="360"/>
      <p2 x="-140" y="360"/>
    </wire>
    <wire>
      <p1 x="-220" y="360"/>
      <p2 x="-180" y="360"/>
    </wire>
    <wire>
      <p1 x="1380" y="1000"/>
      <p2 x="1440" y="1000"/>
    </wire>
    <wire>
      <p1 x="580" y="1260"/>
      <p2 x="620" y="1260"/>
    </wire>
    <wire>
      <p1 x="660" y="1260"/>
      <p2 x="700" y="1260"/>
    </wire>
    <wire>
      <p1 x="840" y="300"/>
      <p2 x="1440" y="300"/>
    </wire>
    <wire>
      <p1 x="640" y="620"/>
      <p2 x="700" y="620"/>
    </wire>
    <wire>
      <p1 x="580" y="620"/>
      <p2 x="600" y="620"/>
    </wire>
    <wire>
      <p1 x="580" y="1200"/>
      <p2 x="620" y="1200"/>
    </wire>
    <wire>
      <p1 x="660" y="1200"/>
      <p2 x="700" y="1200"/>
    </wire>
    <wire>
      <p1 x="-220" y="1200"/>
      <p2 x="140" y="1200"/>
    </wire>
    <wire>
      <p1 x="1220" y="1200"/>
      <p2 x="1300" y="1200"/>
    </wire>
    <wire>
      <p1 x="-80" y="880"/>
      <p2 x="-60" y="880"/>
    </wire>
    <wire>
      <p1 x="20" y="880"/>
      <p2 x="40" y="880"/>
    </wire>
    <wire>
      <p1 x="680" y="880"/>
      <p2 x="700" y="880"/>
    </wire>
    <wire>
      <p1 x="1380" y="880"/>
      <p2 x="1440" y="880"/>
    </wire>
    <wire>
      <p1 x="620" y="880"/>
      <p2 x="640" y="880"/>
    </wire>
    <wire>
      <p1 x="1220" y="560"/>
      <p2 x="1300" y="560"/>
    </wire>
    <wire>
      <p1 x="520" y="500"/>
      <p2 x="560" y="500"/>
    </wire>
    <wire>
      <p1 x="440" y="500"/>
      <p2 x="480" y="500"/>
    </wire>
    <wire>
      <p1 x="1380" y="440"/>
      <p2 x="1440" y="440"/>
    </wire>
    <wire>
      <p1 x="-160" y="440"/>
      <p2 x="-140" y="440"/>
    </wire>
    <wire>
      <p1 x="780" y="440"/>
      <p2 x="1040" y="440"/>
    </wire>
    <wire>
      <p1 x="-240" y="120"/>
      <p2 x="660" y="120"/>
    </wire>
    <wire>
      <p1 x="660" y="120"/>
      <p2 x="1440" y="120"/>
    </wire>
    <wire>
      <p1 x="820" y="700"/>
      <p2 x="860" y="700"/>
    </wire>
    <wire>
      <p1 x="900" y="700"/>
      <p2 x="1300" y="700"/>
    </wire>
    <wire>
      <p1 x="-20" y="1020"/>
      <p2 x="1300" y="1020"/>
    </wire>
    <wire>
      <p1 x="320" y="1120"/>
      <p2 x="320" y="1140"/>
    </wire>
    <wire>
      <p1 x="320" y="1220"/>
      <p2 x="320" y="1240"/>
    </wire>
    <wire>
      <p1 x="0" y="840"/>
      <p2 x="0" y="880"/>
    </wire>
    <wire>
      <p1 x="0" y="760"/>
      <p2 x="0" y="800"/>
    </wire>
    <wire>
      <p1 x="1220" y="20"/>
      <p2 x="1220" y="420"/>
    </wire>
    <wire>
      <p1 x="1220" y="860"/>
      <p2 x="1220" y="980"/>
    </wire>
    <wire>
      <p1 x="1220" y="660"/>
      <p2 x="1220" y="860"/>
    </wire>
    <wire>
      <p1 x="1220" y="420"/>
      <p2 x="1220" y="560"/>
    </wire>
    <wire>
      <p1 x="1220" y="980"/>
      <p2 x="1220" y="1200"/>
    </wire>
    <wire>
      <p1 x="1220" y="560"/>
      <p2 x="1220" y="660"/>
    </wire>
    <wire>
      <p1 x="260" y="1120"/>
      <p2 x="260" y="1140"/>
    </wire>
    <wire>
      <p1 x="260" y="1220"/>
      <p2 x="260" y="1240"/>
    </wire>
    <wire>
      <p1 x="260" y="620"/>
      <p2 x="260" y="660"/>
    </wire>
    <wire>
      <p1 x="200" y="1120"/>
      <p2 x="200" y="1140"/>
    </wire>
    <wire>
      <p1 x="200" y="1220"/>
      <p2 x="200" y="1240"/>
    </wire>
    <wire>
      <p1 x="200" y="740"/>
      <p2 x="200" y="800"/>
    </wire>
    <wire>
      <p1 x="520" y="1060"/>
      <p2 x="520" y="1100"/>
    </wire>
    <wire>
      <p1 x="520" y="1120"/>
      <p2 x="520" y="1160"/>
    </wire>
    <wire>
      <p1 x="140" y="1120"/>
      <p2 x="140" y="1140"/>
    </wire>
    <wire>
      <p1 x="140" y="1220"/>
      <p2 x="140" y="1240"/>
    </wire>
    <wire>
      <p1 x="-80" y="840"/>
      <p2 x="-80" y="880"/>
    </wire>
    <wire>
      <p1 x="-80" y="760"/>
      <p2 x="-80" y="800"/>
    </wire>
    <wire>
      <p1 x="400" y="1120"/>
      <p2 x="400" y="1140"/>
    </wire>
    <wire>
      <p1 x="400" y="1220"/>
      <p2 x="400" y="1240"/>
    </wire>
    <wire>
      <p1 x="-20" y="960"/>
      <p2 x="-20" y="1020"/>
    </wire>
    <wire>
      <p1 x="340" y="1120"/>
      <p2 x="340" y="1140"/>
    </wire>
    <wire>
      <p1 x="340" y="1220"/>
      <p2 x="340" y="1240"/>
    </wire>
    <wire>
      <p1 x="660" y="120"/>
      <p2 x="660" y="320"/>
    </wire>
    <wire>
      <p1 x="280" y="1120"/>
      <p2 x="280" y="1140"/>
    </wire>
    <wire>
      <p1 x="280" y="1220"/>
      <p2 x="280" y="1240"/>
    </wire>
    <wire>
      <p1 x="280" y="740"/>
      <p2 x="280" y="780"/>
    </wire>
    <wire>
      <p1 x="-220" y="360"/>
      <p2 x="-220" y="1100"/>
    </wire>
    <wire>
      <p1 x="-220" y="1100"/>
      <p2 x="-220" y="1200"/>
    </wire>
    <wire>
      <p1 x="220" y="1120"/>
      <p2 x="220" y="1140"/>
    </wire>
    <wire>
      <p1 x="220" y="1220"/>
      <p2 x="220" y="1240"/>
    </wire>
    <wire>
      <p1 x="220" y="620"/>
      <p2 x="220" y="660"/>
    </wire>
    <wire>
      <p1 x="160" y="1120"/>
      <p2 x="160" y="1140"/>
    </wire>
    <wire>
      <p1 x="160" y="1220"/>
      <p2 x="160" y="1240"/>
    </wire>
    <wire>
      <p1 x="420" y="1120"/>
      <p2 x="420" y="1140"/>
    </wire>
    <wire>
      <p1 x="420" y="1220"/>
      <p2 x="420" y="1240"/>
    </wire>
    <wire>
      <p1 x="-40" y="840"/>
      <p2 x="-40" y="880"/>
    </wire>
    <wire>
      <p1 x="-40" y="760"/>
      <p2 x="-40" y="800"/>
    </wire>
    <wire>
      <p1 x="360" y="1120"/>
      <p2 x="360" y="1140"/>
    </wire>
    <wire>
      <p1 x="360" y="1220"/>
      <p2 x="360" y="1240"/>
    </wire>
    <wire>
      <p1 x="680" y="460"/>
      <p2 x="680" y="520"/>
    </wire>
    <wire>
      <p1 x="680" y="520"/>
      <p2 x="680" y="580"/>
    </wire>
    <wire>
      <p1 x="40" y="760"/>
      <p2 x="40" y="880"/>
    </wire>
    <wire>
      <p1 x="1000" y="480"/>
      <p2 x="1000" y="1240"/>
    </wire>
    <wire>
      <p1 x="300" y="620"/>
      <p2 x="300" y="660"/>
    </wire>
    <wire>
      <p1 x="300" y="1160"/>
      <p2 x="300" y="1180"/>
    </wire>
    <wire>
      <p1 x="300" y="1060"/>
      <p2 x="300" y="1080"/>
    </wire>
    <wire>
      <p1 x="300" y="1120"/>
      <p2 x="300" y="1140"/>
    </wire>
    <wire>
      <p1 x="300" y="1220"/>
      <p2 x="300" y="1240"/>
    </wire>
    <wire>
      <p1 x="240" y="1120"/>
      <p2 x="240" y="1140"/>
    </wire>
    <wire>
      <p1 x="240" y="1220"/>
      <p2 x="240" y="1240"/>
    </wire>
    <wire>
      <p1 x="180" y="620"/>
      <p2 x="180" y="660"/>
    </wire>
    <wire>
      <p1 x="180" y="1120"/>
      <p2 x="180" y="1140"/>
    </wire>
    <wire>
      <p1 x="180" y="1220"/>
      <p2 x="180" y="1240"/>
    </wire>
    <wire>
      <p1 x="820" y="320"/>
      <p2 x="820" y="600"/>
    </wire>
    <wire>
      <p1 x="820" y="600"/>
      <p2 x="820" y="700"/>
    </wire>
    <wire>
      <p1 x="440" y="1120"/>
      <p2 x="440" y="1140"/>
    </wire>
    <wire>
      <p1 x="440" y="1220"/>
      <p2 x="440" y="1240"/>
    </wire>
    <wire>
      <p1 x="380" y="1120"/>
      <p2 x="380" y="1140"/>
    </wire>
    <wire>
      <p1 x="380" y="1220"/>
      <p2 x="380" y="1240"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>